.TH detect_destroy 3 2019-08-01 "libchardet manuals"
.\" Process with
.\" nroff -man detect_destroy.3
.\" 2019-08-01 JoungKyun Kim <htt://oops.org>

.SH 이름
detect_destroy \- chardet resource를 해제한다.

.SH 사용법
.B "#include <chardet.h>"
.sp
.BI "void detect_destroy (Detect ** handle);"

.SH 설명
.BI detect_init
에 의하여 할당된 resource를 해제한다.

.SH 반환값
void

.SH 예제
.nf
#include <chardet.h>

int main (void) {
	Detect    * d;
	DetectObj * obj;

	if ( (d = detect_init ()) == NULL ) {
		fprintf (stderr, "chardet handle initialize failed\\n");
		return CHARDET_MEM_ALLOCATED_FAIL;
	}

	detect_reset (&d);

	if ( (obj = detect_obj_init ()) == NULL ) {
		fprintf (stderr, "Memory Allocation failed\\n");
		return CHARDET_MEM_ALLOCATED_FAIL;
	}

	switch (detect_handledata (&d, "안녕하세요", &obj)) {
		case CHARDET_OUT_OF_MEMORY :
			fprintf (stderr, "On handle processing, occured out of memory\\n");
			detect_obj_free (&obj);
			return CHARDET_OUT_OF_MEMORY;
		case CHARDET_NULL_OBJECT :
			fprintf (stderr,
					"3st argument of chardet_handledata() is must memory allocation "
					"with detect_obj_init API\\n");
			return CHARDET_NULL_OBJECT;
	}

	# obj-bom 은 CHARDET_BOM_CHECK 상수 지원여부로 지원을 판단할 수 있습니다.
	printf ("encoding: %s, confidence: %f, exists bom: %d\\n", obj->encoding, obj->confidence, obj->bom);
	detect_obj_free (&obj);
	detect_destroy (&d);

    return 0;
}
.fi

.SH 저자
김정균

.SH 버그 리포트
https://github.com/Joungkyun/libchardet/issues

.SH "참고"
detect_init(3), detect_reset(3)

