.TH detect_reset 3 2019-08-01 "libchardet manuals"
.\" Process with
.\" nroff -man detect_reset.3
.\" 2019-08-01 JoungKyun Kim <htt://oops.org>

.SH 이름
detect_reset - chardet file handle reset
.SH 사용법
.I #include <chardet.h>
.br
.I void chardet_reset (Detect **handle);
.SH 설명
chardet library 의 file handle 을 재 초기화 한다.
.SH 반환값
반환 값 없음
.PP
.SH 예제
.nf
#include <chardet.h>

int main (void) {
	Detect    * d;
	DetectObj * obj;
	int i, arrayNum;
	char *str[] = {
		"this is ascii",
		"이건 euc-kr 입니다."
	};

	arrayNum = sizeof (str) / sizeof (str[0]);

	if ( (d = detect_init ()) == NULL ) {
		fprintf (stderr, "chardet handle initialize failed\\n");
		return CHARDET_MEM_ALLOCATED_FAIL;
	}

	for ( i=0; i<arrayNum; i++ ) {
		detect_reset (&d);

		if ( (obj = detect_obj_init ()) == NULL ) {
			fprintf (stderr, "Memory Allocation failed\\n");
			return CHARDET_MEM_ALLOCATED_FAIL;
		}

		switch (detect_handledata (&d, "안녕하세요", &obj)) {
			case CHARDET_OUT_OF_MEMORY :
				fprintf (stderr, "On handle processing, occured out of memory\\n");
				detect_obj_free (&obj);
				return CHARDET_OUT_OF_MEMORY;
			case CHARDET_NULL_OBJECT :
				fprintf (stderr,
						"2st argument of chardet() is must memory allocation "
						"with detect_obj_init API\\n");
				return CHARDET_NULL_OBJECT;
		}

		# obj-bom 은 CHARDET_BOM_CHECK 상수 지원여부로 지원을 판단할 수 있습니다.
		printf ("encoding: %s, confidence: %f, exists bom: %d\\n", obj->encoding, obj->confidence, obj->bom);
		detect_obj_free (&obj);
	}
	detect_destroy (&d);

    return 0;
}
.fi
.SH 저자
김정균
.SH 버그 리포트
https://github.com/Joungkyun/libchardet/issues
.SH 저작권
Copyright (c) 2019 JoungKyun.Kim

이 프로그램은 MPL/GPL2/LGPL2.1 을 따르며, 사용시의 어떠한 문제에 대하여 보증하지 않는다.
.SH "참고"
detect_obj_init(3), detect_obj_free(3), detect_init(3), detect_handledata(3), detect_destroy(3)

